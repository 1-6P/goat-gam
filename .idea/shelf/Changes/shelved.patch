Index: goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantInfoDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sparta.goatgam.domain.restaurant.dto;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Getter;\r\n\r\nimport java.util.UUID;\r\n\r\n//조회 혹은 응답용으로 사용\r\n\r\n@Getter\r\n@AllArgsConstructor\r\npublic class RestaurantInfoDto {\r\n    private UUID restaurantId;\r\n    private String restaurantName;\r\n    private int regionCode;\r\n    private int isPublic;\r\n    private String restaurantNumber;\r\n    private boolean status;\r\n    private String restaurantAddress;\r\n\r\n\r\n\r\n    // 유저 dto 오면 merge 해야할거같아요\r\n    // private UserDto user;;\r\n    //private String username;\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantInfoDto.java b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantInfoDto.java
--- a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantInfoDto.java	(revision ee1f0df2805bc634e800f6e7c9b4e54acaf93971)
+++ b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantInfoDto.java	(date 1759408699230)
@@ -1,11 +1,12 @@
 package com.sparta.goatgam.domain.restaurant.dto;
 
+import com.sparta.goatgam.domain.restaurant.entity.Restaurant;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
 
 import java.util.UUID;
 
-//조회 혹은 응답용으로 사용
+//얘가 응답 dto 역할을 합니다..!
 
 @Getter
 @AllArgsConstructor
@@ -17,12 +18,24 @@
     private String restaurantNumber;
     private boolean status;
     private String restaurantAddress;
+    private String username;         //(받는거니까)
+    private String restaurantTypeName; // (식당 타입 이름)
 
 
-
-    // 유저 dto 오면 merge 해야할거같아요
-    // private UserDto user;;
-    //private String username;
+    //최종으로 받는 값
+    public static RestaurantInfoDto convertDto(Restaurant r){
+        return new RestaurantInfoDto(
+                r.getRestaurantId(),
+                r.getRestaurantName(),
+                r.getRegionCode(),
+                r.getIsPublic(),
+                r.getRestaurantNumber(),
+                r.isStatus(),
+                r.getRestaurantAddress(),
+                r.getUserName(),
+                r.getRestaurantTypeId().getRestaurantTypeName() //fk로 연결되서 두번 꺼내야함;;
+        );
+    }
 
 
 }
Index: goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantRequestDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sparta.goatgam.domain.restaurant.dto;\r\n\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport java.util.UUID;\r\n\r\n@Getter\r\n@Setter\r\n\r\n\r\npublic class RestaurantRequestDto {\r\n    private Long userId;\r\n    private String userName;\r\n    private int regionCode;\r\n    private int isPublic;\r\n    private UUID restaurantId;\r\n    private String restaurantName;\r\n    private String restaurantAddress;\r\n    private String restaurantNumber;\r\n    private boolean status;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantRequestDto.java b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantRequestDto.java
--- a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantRequestDto.java	(revision ee1f0df2805bc634e800f6e7c9b4e54acaf93971)
+++ b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantRequestDto.java	(date 1759410526016)
@@ -1,22 +1,40 @@
 package com.sparta.goatgam.domain.restaurant.dto;
 
+import io.swagger.v3.oas.annotations.media.Schema;
+import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.Setter;
 import java.util.UUID;
 
 @Getter
 @Setter
+@AllArgsConstructor
 
 
 public class RestaurantRequestDto {
+    //Schema - api 요청 body에 어떤 값이 필요한지 예시 및 설명이 나옴
+    @Schema(description = "유저 ID", example = "1")
     private Long userId;
-    private String userName;
+
+    @Schema(description = "식당 타입 ID", example = "770e8400-e29b-41d4-a716-446655440000")
+    private UUID restaurantTypeId;//restaurant fk
+    //username은 get으로 받아오기때문에 필요없음\
+    @Schema(description = "지역 코드", example = "11001111")
     private int regionCode;
-    private int isPublic;
-    private UUID restaurantId;
+
+
+    @Schema(description = "식당 이름", example = "진현분식")
     private String restaurantName;
+    @Schema(description = "식당 주소", example = "서울시 광화문로 123-45")
     private String restaurantAddress;
+    @Schema(description = "식당 전화번호", example = "02-123-4567")
     private String restaurantNumber;
+
+    /**
     private boolean status;
+    private int isPublic;
+     두 값은 기본값으로 들어감.
+    **/
+}
 
-}
+
Index: goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/Restaurant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sparta.goatgam.domain.restaurant.entity;\r\n\r\n\r\nimport com.sparta.goatgam.domain.user.entity.User;\r\nimport com.sparta.goatgam.global.entity.BaseEntity;\r\nimport jakarta.persistence.*;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\nimport java.util.UUID;\r\n\r\n@Entity\r\n@Getter\r\n@Setter\r\n@Table(name = \"p_restaurant\")\r\n\r\npublic class Restaurant extends BaseEntity {\r\n    @Id\r\n    @Column(name = \"restaurant_id\", nullable = false, updatable = false)\r\n    @GeneratedValue(strategy = GenerationType.UUID)\r\n    private UUID restaurantId;\r\n\r\n    //FK : USER의 ID 필요 -> 타입 작성 필요\r\n    @ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n    @JoinColumn(name=\"user_id\", nullable = false)\r\n    private User user;\r\n\r\n    //식당명\r\n    @Column(name = \"restaurant_name\", nullable = false)\r\n    private String restaurantName;\r\n\r\n    //식당 타입 아이디\r\n    @ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n    @JoinColumn(name = \"restaurant_type_id\", nullable = false)\r\n    private RestaurantType restaurantTypeId;\r\n\r\n    //사장의 유저 이름\r\n    @Column(name = \"user_name\", nullable = false)\r\n    private String userName;\r\n\r\n    //지역코드\r\n    @Column(name = \"region_code\", nullable = false)\r\n    private int regionCode;\r\n\r\n    //활성화 상태 0 : 운영중: 1: 휴무 2: 폐업 등.. 현재는 휴무까지만 적용\r\n    @Column(name =\"is_public\", nullable = false)\r\n    private int isPublic;\r\n\r\n    //식당 주소\r\n    @Column (name = \"restaurant_address\" , nullable = false)\r\n    private String restaurantAddress;\r\n\r\n\r\n    @Column( name = \"restaurant_number\")\r\n    private String restaurantNumber;\r\n\r\n    //상태 (삭제x or 삭제)\r\n    @Column (name = \"status\" , nullable = false)\r\n    private boolean status;\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/Restaurant.java b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/Restaurant.java
--- a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/Restaurant.java	(revision ee1f0df2805bc634e800f6e7c9b4e54acaf93971)
+++ b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/Restaurant.java	(date 1759410202727)
@@ -1,10 +1,13 @@
 package com.sparta.goatgam.domain.restaurant.entity;
 
 
+import com.sparta.goatgam.domain.restaurant.dto.RestaurantRequestDto;
 import com.sparta.goatgam.domain.user.entity.User;
 import com.sparta.goatgam.global.entity.BaseEntity;
 import jakarta.persistence.*;
+import lombok.AccessLevel;
 import lombok.Getter;
+import lombok.NoArgsConstructor;
 import lombok.Setter;
 
 import java.util.UUID;
@@ -13,7 +16,7 @@
 @Getter
 @Setter
 @Table(name = "p_restaurant")
-
+@NoArgsConstructor(access = AccessLevel.PROTECTED)
 public class Restaurant extends BaseEntity {
     @Id
     @Column(name = "restaurant_id", nullable = false, updatable = false)
@@ -59,4 +62,18 @@
     private boolean status;
 
 
+    //편의 생성자를 생성함 (등록 시에만 사용함)
+    public Restaurant(User user, RestaurantType type, RestaurantRequestDto restaurantRequestDto) {
+        this.user = user;
+        this.restaurantTypeId = type;
+        this.restaurantName = restaurantRequestDto.getRestaurantName();
+        this.userName = user.getUsername(); // 필요 시 수정
+        this.regionCode = restaurantRequestDto.getRegionCode();
+        this.isPublic = 0; // 새로 생성된 식당은 무조건 오픈을 가짐
+        this.restaurantAddress = restaurantRequestDto.getRestaurantAddress();
+        this.restaurantNumber = restaurantRequestDto.getRestaurantNumber();
+        this.status = true; // 새로 생성된 식당은 true값으로 조회가 가능해야 함.
+    }
+
+
 }
Index: goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sparta.goatgam.domain.restaurant.service;\r\n\r\nimport com.sparta.goatgam.domain.restaurant.dto.RestaurantDetailDto;\r\nimport com.sparta.goatgam.domain.restaurant.dto.RestaurantInfoDto;\r\nimport com.sparta.goatgam.domain.restaurant.entity.Restaurant;\r\nimport com.sparta.goatgam.domain.restaurant.entity.RestaurantType;\r\nimport com.sparta.goatgam.domain.restaurant.repository.RestaurantRepository;\r\nimport com.sparta.goatgam.domain.restaurant.repository.RestaurantTypeRepository;\r\nimport com.sparta.goatgam.domain.user.repository.UserRepository;\r\nimport org.springframework.transaction.annotation.Transactional;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\n\r\nimport java.util.List;\r\nimport java.util.UUID;\r\n\r\n@Service\r\npublic class RestaurantService {\r\n\r\n    private final RestaurantRepository restaurantRepository;\r\n    private final UserRepository userRepository;\r\n    private final RestaurantTypeRepository restaurantTypeRepository;\r\n    public RestaurantService(\r\n            RestaurantRepository restaurantRepository,\r\n            UserRepository userRepository,\r\n            RestaurantTypeRepository restaurantTypeRepository)\r\n    {\r\n        this.restaurantRepository = restaurantRepository;\r\n        this.userRepository = userRepository;\r\n        this.restaurantTypeRepository = restaurantTypeRepository;\r\n    }\r\n\r\n    //등록\r\n\r\n\r\n\r\n    //전체 조회\r\n    public List<RestaurantInfoDto> getAllRestaurants() {\r\n        List<Restaurant> restaurants = restaurantRepository.findAll();\r\n\r\n        return restaurants.stream()\r\n                .map(r -> new RestaurantInfoDto(\r\n                        r.getRestaurantId(),\r\n                        r.getRestaurantName(),\r\n                        r.getRegionCode(),\r\n                        r.getIsPublic(),\r\n                        r.getRestaurantNumber(),\r\n                        r.isStatus(),\r\n                        r.getRestaurantAddress()\r\n                        //r.getUserName()  // 스냅샷\r\n                ))\r\n                .toList();\r\n    }\r\n\r\n    //단건 상세 조회\r\n    @Transactional(readOnly = true)\r\n    public RestaurantDetailDto getRestaurant(UUID restaurantId) {\r\n        Restaurant r = restaurantRepository.findById(restaurantId)\r\n                .orElseThrow(() -> new IllegalArgumentException(\"식당을 찾을 수 없습니다: \" + restaurantId));\r\n        return RestaurantDetailDto.from(r);\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java
--- a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java	(revision ee1f0df2805bc634e800f6e7c9b4e54acaf93971)
+++ b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java	(date 1759411037859)
@@ -2,10 +2,13 @@
 
 import com.sparta.goatgam.domain.restaurant.dto.RestaurantDetailDto;
 import com.sparta.goatgam.domain.restaurant.dto.RestaurantInfoDto;
+import com.sparta.goatgam.domain.restaurant.dto.RestaurantRequestDto;
 import com.sparta.goatgam.domain.restaurant.entity.Restaurant;
 import com.sparta.goatgam.domain.restaurant.entity.RestaurantType;
 import com.sparta.goatgam.domain.restaurant.repository.RestaurantRepository;
 import com.sparta.goatgam.domain.restaurant.repository.RestaurantTypeRepository;
+import com.sparta.goatgam.domain.user.entity.User;
+import com.sparta.goatgam.domain.user.entity.UserRoleEnum;
 import com.sparta.goatgam.domain.user.repository.UserRepository;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.http.ResponseEntity;
@@ -33,24 +36,40 @@
     }
 
     //등록
+    @Transactional
+    public RestaurantInfoDto createRestaurant(RestaurantRequestDto restaurantRequestDto) {
+        User user = userRepository.findById(restaurantRequestDto.getUserId())
+                .orElseThrow(() -> new IllegalArgumentException("User not found")); //userID 체크
+
+        RestaurantType type = restaurantTypeRepository.findById(restaurantRequestDto.getRestaurantTypeId())
+                .orElseThrow(() -> new IllegalArgumentException("RestaurantType not found")); //타입값 체크
+
+        // Restaurant entity를 생성한다 (편의 생성자 이용)
+        Restaurant res = new Restaurant(user, type, restaurantRequestDto);
+
+        //사용자 ROLE 체크함.
+        if(user.getRole() != UserRoleEnum.Owner) {
+            throw new IllegalArgumentException("해당 유저는 사장님으로 등록되어 있지 않습니다. 확인 후 재시도해주세요");
+        }
+
+        //생성된 엔티티를 DB에 저장해 Insert query 작동시킴
+        Restaurant saved = restaurantRepository.save(res);
+
+        //저장된 엔티티를 클라이언트에게 DTO를 이용해 변환한 후 반환해준다.
+        return RestaurantInfoDto.convertDto(saved); //Response
+    }
 
 
 
     //전체 조회
+    @Transactional(readOnly = true)
     public List<RestaurantInfoDto> getAllRestaurants() {
         List<Restaurant> restaurants = restaurantRepository.findAll();
 
+
+        //엔티티 -> DTO 변환
         return restaurants.stream()
-                .map(r -> new RestaurantInfoDto(
-                        r.getRestaurantId(),
-                        r.getRestaurantName(),
-                        r.getRegionCode(),
-                        r.getIsPublic(),
-                        r.getRestaurantNumber(),
-                        r.isStatus(),
-                        r.getRestaurantAddress()
-                        //r.getUserName()  // 스냅샷
-                ))
+                .map(RestaurantInfoDto::convertDto) //dto 변환한 객체 넣기
                 .toList();
     }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b2a6d045-5851-4016-b226-94bf513276ee\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/data_source_mapping.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.gitignore\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/compiler.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/goatgam.iml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/goatgam.main.iml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/GoatgamApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/GoatgamApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/controller/RestaurantController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/controller/RestaurantController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantInfoDto.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantInfoDto.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/Restaurant.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/Restaurant.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/RestaurantType.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/RestaurantType.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/user/controller/UserController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/user/controller/UserController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/user/service/UserService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/user/service/UserService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/config/config/OpenApiConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/config/OpenApiConfig.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/config/config/WebSecurityConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/config/WebSecurityConfig.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/entity/BaseEntity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/entity/BaseEntity.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/security/JwtAuthenticationFilter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/JwtAuthenticationFilter.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/security/JwtAuthorizationFilter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/JwtAuthorizationFilter.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/security/UserDetailsImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/UserDetailsImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/security/UserDetailsServiceImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/UserDetailsServiceImpl.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$/goatgam\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"goatgam\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"33TDk0O0AjcTJd80dd1q0ZvSLUP\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Gradle.Build goatgam.executor\": \"Run\",\r\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\r\n    \"RequestMappingsPanelOrder0\": \"0\",\r\n    \"RequestMappingsPanelOrder1\": \"1\",\r\n    \"RequestMappingsPanelWidth0\": \"75\",\r\n    \"RequestMappingsPanelWidth1\": \"75\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"Spring Boot.GoatgamApplication.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"feature/20-restaurant\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"DatabaseDriversLRU\": [\r\n      \"postgresql\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"GoatgamApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"goatgam.main\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.sparta.goatgam.GoatgamApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-bf35d07a577b-intellij.indexing.shared.core-IU-252.26199.169\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-9c94529fcfe0-JavaScript-IU-252.26199.169\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b2a6d045-5851-4016-b226-94bf513276ee\" name=\"Changes\" comment=\"\" />\r\n      <created>1759332308267</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1759332308267</updated>\r\n      <workItem from=\"1759332310553\" duration=\"301000\" />\r\n      <workItem from=\"1759375311994\" duration=\"7955000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ee1f0df2805bc634e800f6e7c9b4e54acaf93971)
+++ b/.idea/workspace.xml	(date 1759411697305)
@@ -5,30 +5,16 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b2a6d045-5851-4016-b226-94bf513276ee" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/data_source_mapping.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules/goatgam.iml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules/goatgam.main.iml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/GoatgamApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/GoatgamApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/data_source_mapping.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/data_source_mapping.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/controller/RestaurantController.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/controller/RestaurantController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantInfoDto.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantInfoDto.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantRequestDto.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/dto/RestaurantRequestDto.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/Restaurant.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/Restaurant.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java" afterDir="false" />
+    </list>
+    <list id="6c6b727f-b436-456d-a838-63526a0d2811" name="Changes by namdonghyeon" comment="">
       <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/RestaurantType.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/entity/RestaurantType.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/service/RestaurantService.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/user/controller/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/user/controller/UserController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/user/service/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/domain/user/service/UserService.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/config/config/OpenApiConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/config/OpenApiConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/config/config/WebSecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/config/WebSecurityConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/entity/BaseEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/entity/BaseEntity.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/security/JwtAuthenticationFilter.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/JwtAuthenticationFilter.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/security/JwtAuthorizationFilter.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/JwtAuthorizationFilter.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/security/UserDetailsImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/UserDetailsImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/security/UserDetailsServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/goatgam/src/main/java/com/sparta/goatgam/global/security/UserDetailsServiceImpl.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -80,34 +66,34 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Gradle.Build goatgam.executor": "Run",
-    "ModuleVcsDetector.initialDetectionPerformed": "true",
-    "RequestMappingsPanelOrder0": "0",
-    "RequestMappingsPanelOrder1": "1",
-    "RequestMappingsPanelWidth0": "75",
-    "RequestMappingsPanelWidth1": "75",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "Spring Boot.GoatgamApplication.executor": "Run",
-    "git-widget-placeholder": "feature/20-restaurant",
-    "kotlin-language-version-configured": "true",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Gradle.Build goatgam.executor&quot;: &quot;Run&quot;,
+    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
+    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
+    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
+    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
+    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;Spring Boot.GoatgamApplication.executor&quot;: &quot;Run&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;feature/20-restaurant&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   },
-  "keyToStringList": {
-    "DatabaseDriversLRU": [
-      "postgresql"
+  &quot;keyToStringList&quot;: {
+    &quot;DatabaseDriversLRU&quot;: [
+      &quot;postgresql&quot;
     ]
   }
-}]]></component>
+}</component>
   <component name="RunManager">
     <configuration name="GoatgamApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
       <module name="goatgam.main" />
@@ -133,11 +119,23 @@
       <option name="presentableId" value="Default" />
       <updated>1759332308267</updated>
       <workItem from="1759332310553" duration="301000" />
-      <workItem from="1759375311994" duration="7955000" />
+      <workItem from="1759375311994" duration="12770000" />
+      <workItem from="1759406683560" duration="4988000" />
     </task>
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
 </project>
\ No newline at end of file
Index: .idea/data_source_mapping.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DataSourcePerFileMappings\">\r\n    <file url=\"file://$APPLICATION_CONFIG_DIR$/consoles/db/6999a84b-a3d7-4527-b047-fe834a60e73c/console.sql\" value=\"6999a84b-a3d7-4527-b047-fe834a60e73c\" />\r\n    <file url=\"file://$APPLICATION_CONFIG_DIR$/consoles/db/6999a84b-a3d7-4527-b047-fe834a60e73c/console_1.sql\" value=\"6999a84b-a3d7-4527-b047-fe834a60e73c\" />\r\n    <file url=\"file://$APPLICATION_CONFIG_DIR$/consoles/db/6999a84b-a3d7-4527-b047-fe834a60e73c/console_2.sql\" value=\"6999a84b-a3d7-4527-b047-fe834a60e73c\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/data_source_mapping.xml b/.idea/data_source_mapping.xml
--- a/.idea/data_source_mapping.xml	(revision ee1f0df2805bc634e800f6e7c9b4e54acaf93971)
+++ b/.idea/data_source_mapping.xml	(date 1759410444466)
@@ -3,6 +3,5 @@
   <component name="DataSourcePerFileMappings">
     <file url="file://$APPLICATION_CONFIG_DIR$/consoles/db/6999a84b-a3d7-4527-b047-fe834a60e73c/console.sql" value="6999a84b-a3d7-4527-b047-fe834a60e73c" />
     <file url="file://$APPLICATION_CONFIG_DIR$/consoles/db/6999a84b-a3d7-4527-b047-fe834a60e73c/console_1.sql" value="6999a84b-a3d7-4527-b047-fe834a60e73c" />
-    <file url="file://$APPLICATION_CONFIG_DIR$/consoles/db/6999a84b-a3d7-4527-b047-fe834a60e73c/console_2.sql" value="6999a84b-a3d7-4527-b047-fe834a60e73c" />
   </component>
 </project>
\ No newline at end of file
Index: goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/controller/RestaurantController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sparta.goatgam.domain.restaurant.controller;\r\n\r\nimport com.sparta.goatgam.domain.restaurant.dto.RestaurantDetailDto;\r\nimport com.sparta.goatgam.domain.restaurant.dto.RestaurantInfoDto;\r\nimport com.sparta.goatgam.domain.restaurant.service.RestaurantService;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\nimport java.util.UUID;\r\n\r\n@RestController\r\n@Slf4j\r\n@RequiredArgsConstructor\r\n@RequestMapping(\"/api/v1/restaurant\")\r\npublic class RestaurantController {\r\n\r\n    private final RestaurantService restaurantService;\r\n\r\n    //전체 조회\r\n    @GetMapping(\"/\")\r\n    public List<RestaurantInfoDto> getRestaurants() {\r\n        return restaurantService.getAllRestaurants();\r\n    }\r\n\r\n    //등록\r\n    @PostMapping(\"/create\")\r\n    public RestaurantInfoDto createRestaurant(@RequestBody RestaurantInfoDto restaurantInfoDto) {}\r\n\r\n    //단건 조회\r\n    @GetMapping(\"/{restaurantId}\")\r\n    public ResponseEntity<RestaurantDetailDto> getDetail(@PathVariable UUID restaurantId) {\r\n        return ResponseEntity.ok(restaurantService.getRestaurant(restaurantId));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/controller/RestaurantController.java b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/controller/RestaurantController.java
--- a/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/controller/RestaurantController.java	(revision ee1f0df2805bc634e800f6e7c9b4e54acaf93971)
+++ b/goatgam/src/main/java/com/sparta/goatgam/domain/restaurant/controller/RestaurantController.java	(date 1759410286634)
@@ -2,7 +2,10 @@
 
 import com.sparta.goatgam.domain.restaurant.dto.RestaurantDetailDto;
 import com.sparta.goatgam.domain.restaurant.dto.RestaurantInfoDto;
+import com.sparta.goatgam.domain.restaurant.dto.RestaurantRequestDto;
 import com.sparta.goatgam.domain.restaurant.service.RestaurantService;
+import io.swagger.v3.oas.annotations.Operation;
+import io.swagger.v3.oas.annotations.tags.Tag;
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.http.ResponseEntity;
@@ -15,19 +18,25 @@
 @Slf4j
 @RequiredArgsConstructor
 @RequestMapping("/api/v1/restaurant")
+@Tag(name = "식당 API", description = "식당 관련 기능 API입니다.")
 public class RestaurantController {
 
     private final RestaurantService restaurantService;
 
     //전체 조회
+
+    @Operation(summary = "전체 식당 조회", description = "등록된 모든 식당을 조회합니다")
     @GetMapping("/")
     public List<RestaurantInfoDto> getRestaurants() {
         return restaurantService.getAllRestaurants();
     }
 
     //등록
-    @PostMapping("/create")
-    public RestaurantInfoDto createRestaurant(@RequestBody RestaurantInfoDto restaurantInfoDto) {}
+    @Operation(summary = "식당 등록", description = "새로운 식당 등록하기")
+    @PostMapping
+    public RestaurantInfoDto createRestaurant(@RequestBody RestaurantRequestDto restaurantRequestDto) {
+        return restaurantService.createRestaurant(restaurantRequestDto);
+    }
 
     //단건 조회
     @GetMapping("/{restaurantId}")
